This Terraform module manages two independent passwords: **active** and **backup**.  
It provides a controlled way to rotate either password without unintentionally regenerating both.

## Inputs

| Variable                | Type  | Default | Description                                     |
|--------------------------|-------|---------|-------------------------------------------------|
| `force_rotate_active`    | bool  | false   | Set to `true` to rotate the active password.    |
| `rotate_backup`          | bool  | false   | Set to `true` to rotate the backup password.    |

---

## Outputs

| Output                   | Description                        |
|------------------------- |------------------------------------|
| `active_password`        | The current active password.       |
| `backup_password`        | The current backup password.       |

---

## Run Locally 
Password Rotate Module
======================

This Terraform module manages two independent passwords: ACTIVE and BACKUP. 
It allows controlled rotation of each password without unintentionally regenerating both.

------------------------------------------------------------
Run Locally
------------------------------------------------------------

You can test and run this module locally by using the provided examples folder.

Steps:

1. Navigate to the examples directory:

   cd Terraform_Password_Gen_Module/examples

2. Update main.tf variables as needed.
   Example:

   module "password_rotate" {
     source = "../.."

     force_rotate_active = false
     force_rotate_backup = false
   }

   - Set force_rotate_active = true if you want to rotate the active password.
   - Set force_rotate_backup = true if you want to rotate the backup password.
   - Leave both as false to keep passwords stable.

3. Initialize Terraform:

   terraform init

4. Review the plan:

   terraform plan

5. Apply the changes:

   terraform apply --auto-approve

------------------------------------------------------------
Viewing Passwords
------------------------------------------------------------

Passwords generated by this module are marked as SENSITIVE in Terraform. 
This means they will not be displayed in the output of 'terraform apply' or 'terraform plan'.

To reveal the values, use the following command:

terraform output active_password
terraform output backup_password

------------------------------------------------------------
Notes
------------------------------------------------------------
- Use force_rotate_active or force_rotate_backup flags to trigger rotation.
- Keep them set to false to prevent unnecessary password regeneration.
- The module uses Terraform "keepers" to ensure passwords only rotate when explicitly requested.
